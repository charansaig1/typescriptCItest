name: Cleanup Unused Docker Images

on:
  push:
    branches:
      - master

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code (needed for Docker login credentials)
      - name: Checkout Code
        uses: actions/checkout@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }} # Set Docker Hub username as a GitHub secret
          password: ${{ secrets.DOCKER_PASSWORD }} # Set Docker Hub password as a GitHub secret

      # Get a list of all tags for the image 'charansaig1/myappcac'
      - name: Get list of Docker image tags
        id: tags
        run: |
          IMAGE="charansaig1/myappcac"
          TAG_TO_KEEP="be560d48ba2fa033b4fa64a94fde98e4e458c4e0"  # The latest version tag
          echo "Fetching tags for image: $IMAGE"
          TAGS=$(curl -s https://hub.docker.com/v2/repositories/${IMAGE}/tags?page_size=100 | jq -r '.results[].name')
          echo "::set-output name=tags::$TAGS"  # Set output correctly

      # Remove all versions except the specified one to keep
      - name: Remove outdated Docker images
        run: |
          IMAGE="charansaig1/myappcac"
          TAG_TO_KEEP="be560d48ba2fa033b4fa64a94fde98e4e458c4e0"

          # Loop over all tags to remove outdated versions
          for TAG in ${{ steps.tags.outputs.tags }}; do  # Access tags via the correct output
            if [[ "$TAG" != "$TAG_TO_KEEP" ]]; then
              echo "Removing outdated tag: $TAG"
              docker rmi -f ${IMAGE}:${TAG} || true
            fi
          done

          # Check if the tag we want to keep is available on Docker Hub
          echo "Checking if the image with tag $TAG_TO_KEEP exists on Docker Hub..."
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://hub.docker.com/v2/repositories/${IMAGE}/tags/${TAG_TO_KEEP})

          # If the response code is 200, the image exists, else it's not available
          if [ "$RESPONSE" -eq 200 ]; then
            echo "Image $IMAGE:${TAG_TO_KEEP} is available on Docker Hub."
            echo "Cleaned up unused Docker image versions."
          else
            echo "Error: Image $IMAGE:${TAG_TO_KEEP} is not available on Docker Hub."
          fi
